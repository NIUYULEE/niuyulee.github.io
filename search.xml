<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>通过Hexo和Github Pages搭建个人博客</title>
      <link href="2021/03/05/%E9%80%9A%E8%BF%87Hexo%E5%92%8CGithub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/03/05/%E9%80%9A%E8%BF%87Hexo%E5%92%8CGithub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考文章：<a href="https://segmentfault.com/a/1190000017986794">超详细Hexo+Github Page搭建技术博客教程【持续更新】</a></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>很久以前我就想写个人博客了，所以在上网找了很多的博客方案，发现还是Github Pags最简约，没有花里胡哨的东西，于是搭建了这套方案，下面就是我这套方案的具体实现。</p><h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><hr><p>因为我使用的Macbook，所以本教程主要针对MacOS用户。如果您使用的是PC的话，可以通过官网安装Git和Node.js，并配置环境变量，详细安装教程请参考<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>，以下是安装命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#brew通过安装脚本安装</span><br><span class="line">Homebrew    # &#x2F;bin&#x2F;zsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;gitee.com&#x2F;cunkai&#x2F;HomebrewCN&#x2F;raw&#x2F;master&#x2F;Homebrew.sh)&quot;</span><br><span class="line">Git         # brew install git</span><br><span class="line">Node.js     # brew install nodejs</span><br></pre></td></tr></table></figure><p>安装完毕后通过如下命令验证是否安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">% git version</span><br><span class="line">git version 2.30.0</span><br><span class="line">% node -v</span><br><span class="line">v14.15.4</span><br><span class="line">% npm -v</span><br><span class="line">7.4.3</span><br></pre></td></tr></table></figure><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><hr><p>以上程序验证安装好后，通过npm安装Hexo，并初始化Hexo文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% npm install -g hexo-cli</span><br><span class="line">% mkdir niuyulee_blog # 这里可以写成自己想要设置的文件夹名</span><br><span class="line">% cd niuyulee_blog &amp;&amp; npx hexo init</span><br></pre></td></tr></table></figure><p>查看文件夹下是否已经已经有安装文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% ls</span><br><span class="line">_config.landscape.ymldb.jsonpackage-lock.jsonpublicsource</span><br><span class="line">_config.ymlnode_modulespackage.jsonscaffoldsthemes</span><br></pre></td></tr></table></figure><p>如果执行npx hexo init没有报错的话，就可以执行<code>npx hexo s</code>访问浏览器链接<code>http://localhost:4000</code>验证是否搭建成功，如果有hexo默认页面的话就继续向下看吧</p><h1 id="登陆Github并创建博客仓库"><a href="#登陆Github并创建博客仓库" class="headerlink" title="登陆Github并创建博客仓库"></a>登陆Github并创建博客仓库</h1><hr><p>登陆GitHub，点击个人头像 &gt; Your profile，进入个人资料，新建名为&lt;username&gt;.github.io的仓库。</p><blockquote><p>注：仓库名必须为&lt;username&gt;.github.io</p></blockquote><p><img src="https://i.loli.net/2021/03/05/maQCx9EAUH6gTwe.png" alt="image.png"><br>因为我这里已经创建过<code>niuyulee.github.io</code>，所以会报错，如果是大家创建的<code>&lt;username&gt;.github.io</code>，会显示一个✅，则表示检测成功，点击页面最下端的<code>Create repository</code>创建完毕。<br><img src="https://i.loli.net/2021/03/05/C98IvfSiWXq6xNh.png" alt="image.png"></p><h1 id="配置-SSH-key"><a href="#配置-SSH-key" class="headerlink" title="配置 SSH key"></a>配置 SSH key</h1><hr><p>全局配置本地用户并新建SSH key。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% git config --global user.name &quot;用户名&quot;</span><br><span class="line">% git config --global user.email &quot;邮箱地址&quot;</span><br><span class="line">% ssh-keygen -t rsa -C &#39;上面的邮箱&#39;</span><br></pre></td></tr></table></figure><p>按照提示回车3次，生成SSH key。通过<code>cat ~/.ssh/id_rsa.pub</code>查看文件内容，获取刚刚创建的SSH key。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">% cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3xxxxxxxxxxxxxhwoehqoheiofqowfoiwhoiaodighoaihfgoidhfoihiofxxxxxOe6PkoB8h0Ji7KHdQrXQH9FVN081+96NsOGZEFUrjHXTxWc9B6DVpuWzv9KG1YI6u9ZfKtWcUvV4dxY6GqnvbSfHAFf6CtRpCOaQcQvE&#x3D; niuyulee@gmail.com</span><br></pre></td></tr></table></figure><p>然后打开Github绑定本地创建的SSH key。点击<code>个人头像 &gt; Settings &gt; SSH and GPG Keys</code>，点击New SSH key，Title这里可以随便写，Key填写刚才查看的pub，再点击Add SSH key创建完毕。<br><img src="https://i.loli.net/2021/03/05/ndsA7QxJLF4j1Tu.png" alt="image.png"><br><img src="https://i.loli.net/2021/03/05/Jn7uT8ebkclNCBZ.png" alt="image.png"></p><h1 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h1><hr><p>此时基本要安装及设置的东西都好了，接下来我们还要设置下Hexo中的仓库地址。<br>首先打开Hexo目录下的<code>_config.yml</code> 配置文，跳转至文件末尾，填写如下配置并保存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">% vim niuyulee_blog&#x2F;_config.yml</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    github: https:&#x2F;&#x2F;github.com&#x2F;NIUYULEE&#x2F;niuyulee.github.io.git  </span><br><span class="line">    # 这里为您创建的https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;&lt;username&gt;.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后安装Hexo插件<code>hexo-deployer-git</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>最后执行以下命令部署上传，g 是 generate 缩写，d 是 deploy 缩写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% npx hexo g -d</span><br></pre></td></tr></table></figure><p>上传完毕后打开浏览器访问<code>https://&lt;username&gt;.github.io</code>即可看到您部署的Hexo个人博客。</p><h1 id="编写您的第一篇文章"><a href="#编写您的第一篇文章" class="headerlink" title="编写您的第一篇文章"></a>编写您的第一篇文章</h1><hr><p>您可以执行<code>hexo new &lt;title&gt;</code>来创建一篇新文章或者新的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% hexo new &#39;通过Hexo和Github Pages搭建个人博客&#39;</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: ~&#x2F;niuyulee_blog&#x2F;source&#x2F;_posts&#x2F;通过Hexo和Github-Pages搭建个人博客.md</span><br></pre></td></tr></table></figure><p>然后打开该markdown文件进行编辑，详细的文档参数请参考<a href="https://hexo.io/zh-cn/docs/writing">写作｜Hexo</a>，markdown语法请参考<a href="https://xianbai.me/learn-md/index.html">Markdown 入门参考</a>。</p><blockquote><p>注：可以先执行<code>hexo s</code>运行本地项目，然后编写文章的同时访问<code>localhost:4000</code>查看最后应用于Github Pages的页面，通过<code>cmd + r</code>刷新缓存。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 通过Hexo和Github Pages搭建个人博客</span><br><span class="line">date: 2021-03-05 09:36:53</span><br><span class="line">tags:</span><br><span class="line">  - Github</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 前言</span><br><span class="line">很久以前我就想写个人博客了，所以在上网找了很多的博客方案，发现还是Github Pags最简约，没有花里胡哨的东西，于是搭建了这套方案，下面就是我这套方案的具体实现。</span><br><span class="line"></span><br><span class="line"># 准备环境</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>最后写完没有问题后，再次上传您刚才编写的markdown页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% npx hexo g -d</span><br></pre></td></tr></table></figure><h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><hr><p>访问<code>https://&lt;username&gt;.github.io</code>查看您刚才编写的文章，开一瓶肥宅快乐水庆祝一下吧～<br><img src="https://i.loli.net/2021/03/05/G9ocf2kRVxEeZBp.png" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker常用的删除命令</title>
      <link href="2021/03/04/docker%E5%B8%B8%E7%94%A8%E7%9A%84%E5%88%A0%E9%99%A4%E5%91%BD%E4%BB%A4/"/>
      <url>2021/03/04/docker%E5%B8%B8%E7%94%A8%E7%9A%84%E5%88%A0%E9%99%A4%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考文章：<a href="https://blog.csdn.net/xs20691718/article/details/81868909">快速批量删除 docker 镜像或容器</a></p></blockquote><ol><li>直接删除所有镜像或容器</li></ol><ul><li><p>直接删除所有镜像</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &#96;docker images -q&#96;</span><br></pre></td></tr></table></figure></li><li><p>直接删除所有容器</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm &#96;docker ps -aq&#96;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>按条件筛选之后删除</li></ol><ul><li>按条件筛选之后删除镜像  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &#96;docker images | grep xxxxx | awk &#39;&#123;print $3&#125;&#39;&#96;</span><br></pre></td></tr></table></figure></li><li>按条件筛选之后删除容器  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm &#96;docker ps -a | grep xxxxx | awk &#39;&#123;print $1&#125;&#39;&#96;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
